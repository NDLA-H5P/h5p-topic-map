name: Node.js CI

on:
  - push
  - workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node.js dependencies
        uses: bahmutov/npm-install@v1

      - name: Build
        run: npm run build

  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node.js dependencies
        uses: bahmutov/npm-install@v1

      - name: Lint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node.js dependencies
        uses: bahmutov/npm-install@v1

      - name: Test
        run: npm run test
        env:
          CI: true

  chromatic-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # ðŸ‘ˆ Required to retrieve git history

      - name: Install Node.js dependencies
        uses: bahmutov/npm-install@v1

      - name: Publish to Chromatic
        uses: chromaui/action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          exitZeroOnChanges: true
          ignoreLastBuildOnBranch: main

  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: h5p-topic-map

      - name: Build main project
        run: |
          if test -f "h5p-topic-map/package.json"
          then
            pushd h5p-topic-map
            npm install
            npm run build --if-present
            popd
          fi

      - name: Get H5P dependencies
        run: |
          mkdir -p dist
          pushd dist

          while read -r repo
          do
            git clone ${repo}
            echo "Repo: ${repo}"

          done < ../h5p-topic-map/build_info/repos

          cp -r ../h5p-topic-map .
          popd

      - name: Build dependencies
        run: |
          pushd dist

          for dependency in */ ; do
            echo "Dependency name: ${dependency}"

            if test -f "${dependency}package.json"
            then 
              pushd ${dependency}
              npm install
              npm run build --if-present
              popd
            fi
          done

          popd

      - name: Load library.json
        id: set_library
        run: |
          pushd dist
          ls
          JSON=$(cat ./h5p-topic-map/library.json)
          JSON="${JSON//'%'/%25}"
          JSON="${JSON//$'\n'/%0A}"
          JSON="${JSON//$'\r'/%0D}"
          echo "::set-output name=library::${JSON}"
          popd

      - name: Create version string
        id: version
        run: |
          echo "::set-output name=version::${{ 
              format(
                'v{0}.{1}.{2}',
                fromJson(steps.set_library.outputs.library).majorVersion,
                fromJson(steps.set_library.outputs.library).minorVersion,
                fromJson(steps.set_library.outputs.library).patchVersion
              )
            }}"

      - name: Pack H5P Topic Map
        run: |
          cd dist
          ls
          npm install -g h5p
          ${{
            format(
              'h5p pack -r h5p-topic-map h5p-topic-map_{0}.h5p',
              steps.version.outputs.version
            )
          }}
          h5p validate h5p-topic-map.h5p

      - name: Archive H5P pack
        uses: actions/upload-artifact@v2
        with:
          name: h5p-topic-map.h5p
          path: |
            ${{
              format(
                'dist/h5p-topic-map_{0}.h5p',
                steps.version.outputs.version
              )
            }}

      - uses: "marvinpinto/action-automatic-releases@latest" # https://github.com/marvinpinto/actions/tree/master/packages/automatic-releases
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{steps.version.outputs.version}}
          prerelease: false
          files: |
            ${{
              format(
                'dist/h5p-topic-map_{0}.h5p',
                steps.version.outputs.version
              )
            }}
